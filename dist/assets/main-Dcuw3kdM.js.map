{"version":3,"file":"main-Dcuw3kdM.js","sources":["../../src/js/menu.js","../../src/js/header.js","../../src/js/api/your-energy-api.js","../../src/js/api/toast-manager.js","../../src/js/quote-of-day.js","../../src/js/pagination-exercises.js","../../src/img/icons.svg","../../src/js/modal.js","../../src/js/rating-form.js","../../src/js/timer-info.js","../../src/js/exercise-info.js","../../src/js/loader.js","../../src/js/exercises.js","../../src/js/group-list.js","../../src/js/exercises-menu.js","../../src/js/scroll-to-top.js"],"sourcesContent":["const mobileMenu = document.querySelector('.mobile-menu');\nconst mobileMenuOpenButton = document.querySelector('.mobile-menu-open-btn');\nconst mobileMenuCloseButton = document.querySelector('.mobile-menu-close-btn');\n\nmobileMenuOpenButton.addEventListener('click', () => {\n  mobileMenu.classList.add('is-open');\n});\n\nmobileMenuCloseButton.addEventListener('click', () => {\n  mobileMenu.classList.remove('is-open');\n});\n","document.addEventListener('DOMContentLoaded', () => {\n    const currentPath = window.location.pathname;\n    document.querySelectorAll('.nav-item .nav-link').forEach(link => {\n        const item = link.closest('.nav-item');\n        item.classList.toggle(\n            'active',\n            currentPath.endsWith(link.getAttribute('href').substring(1))\n        );\n    });\n});\n","import axios from 'axios';\n\nconst API_CONFIG = {\n    baseURL: 'https://your-energy.b.goit.study/api',\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n};\n\nconst FILTER_TYPES = ['Body parts', 'Muscles', 'Equipment'];\n\n\nclass YourEnergy {\n    constructor() {\n        this.api = axios.create(API_CONFIG);\n\n        this.api.interceptors.response.use(\n            (response) => response.data,\n            (error) => Promise.reject(error),\n        );\n    }\n\n\n    handleDefaultError(error) {\n        const status = error.status;\n\n        switch (status) {\n            case 400:\n                return 'Please check your input and try again.';\n            case 404:\n                return 'This training page took a rest day. Please try again.';\n            case 500:\n                return 'Our fitness server needs a quick breather. Please try again.';\n            default:\n                if (error.response) {\n                    const { data } = error.response;\n                    return (data.message || 'Something unexpected happened');\n                }\n                else if (error.request) {\n                    return (error.request.statusText);\n                }\n                else {\n                    return (`Error: ${error.message}`);\n                }\n        }\n    }\n\n\n    async getExercises(params = {}) {\n        if (!params.page || !params.limit || typeof params.page !== 'number' || typeof params.limit !== 'number') {\n            return 'Please specify page and items per page';\n        }\n\n        try {\n            return await this.api.get('/exercises', { params });\n        } catch (error) {\n            switch (error.status) {\n                case 409:\n                    return 'Select a filter to view results';\n                case 500:\n                    return 'Our fitness server needs a quick breather. Please try again.';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n\n    async addRating(id, rate, email, review) {\n        const data = { rate, email, review };\n\n        try {\n            return await this.api.patch(`/exercises/${id}/rating`, data);\n        } catch (error) {\n            switch (error.status) {\n                case 404:\n                    return 'Exercise not found. Try exploring similar ones.';\n                case 409:\n                    return 'Looks like your email is already part of this exercise community!';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n\n    async getExerciseById(id) {\n        try {\n            return await this.api.get(`/exercises/${id}`);\n        } catch (error) {\n            switch (error.status) {\n                case 404:\n                    return 'Exercise not found. Try exploring similar ones.';\n                case 409:\n                    return 'Looks like your email is already part of this exercise community!';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n\n    async getExercisesByFilter(params = {}) {\n        if (!params.page || !params.limit || typeof params.page !== 'number' || typeof params.limit !== 'number') {\n            return 'Please specify page and items per page';\n        }\n\n        if (!FILTER_TYPES.includes(params.filter)) {\n            return 'Filter not found. Check out our available categories';\n        }\n\n        try {\n            return await this.api.get('/filters', { params });\n        } catch (error) {\n            switch (error.status) {\n                case 404:\n                    return 'The way to exercises not found. Try exploring similar ones.';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n\n    async orderSubscription(email) {\n        if (!email) return 'Email is not provided';\n\n        try {\n            return await this.api.post('/subscription', { email });\n        } catch (error) {\n            switch (error.status) {\n                case 404:\n                    return 'The way to subscription not found. Try exploring similar ones.';\n                case 409:\n                    return 'Looks like such a subscription is already part of this community!';\n                default:\n                    return this.handleDefaultError(error);\n            }\n        }\n    }\n\n    async getExercisesByIdList(list) {\n        if (!list.length) return 'Please specify list of exercises to get';\n\n        const promises = list.map(async id => await this.getExerciseById(id));\n        const results = await Promise.allSettled(promises);\n\n        return results.filter(result => result.status === 'fulfilled')\n            .map(result => result.value);\n    }\n\n\n    async getQuote() {\n\n        try {\n            return await this.api.get('/quote');\n        } catch (error) {\n            return this.handleDefaultError(error);\n        }\n    }\n}\n\n\nconst yourEnergy = new YourEnergy();\n\nexport default yourEnergy;","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst rootStyles = getComputedStyle(document.documentElement);\n\nconst popupBgColor = rootStyles.getPropertyValue('--color-popup-bg').trim();\nconst popupTxtColor = rootStyles.getPropertyValue('--color-popup-txt').trim();\nconst popupMainColor = rootStyles.getPropertyValue('--color-popup-main').trim();\nconst popupLineColor = rootStyles.getPropertyValue('--color-popup-line').trim();\n\nclass ToastManager {\n    constructor() {\n        iziToast.settings({\n            timeout: 5000,\n            resetOnHover: true,\n            position: 'topLeft',\n            transitionIn: 'fadeInDown',\n            transitionOut: 'fadeOutUp',\n            progressBar: true,\n            progressBarColor: popupLineColor,\n            backgroundColor: popupBgColor,\n            titleColor: popupMainColor,\n            messageColor: popupTxtColor,\n            theme: 'dark',\n        });\n    }\n\n    success(title, message) {\n        iziToast.success({\n            title: title,\n            message: message,\n        });\n    }\n\n    error(title, message) {\n        iziToast.error({\n            title: title,\n            message: message,\n        });\n    }\n\n    warning(title, message) {\n        iziToast.warning({\n            title: title,\n            message: message,\n        });\n    }\n\n    settings(settings) {\n        iziToast.settings(settings);\n    }\n}\n\nconst toastManager = new ToastManager();\n\nexport default toastManager;","import yourEnergy from './api/your-energy-api';\nimport toastManager from './api/toast-manager.js';\n\nconst today = new Date().toISOString().slice(0, 10);\nconst quote = document.querySelector(\".blockquote-text\");\nconst author = document.querySelector(\".quote-author\")\n\nconst quoteInStorage = JSON.parse(localStorage.getItem(\"quoteOfDay\"));\n\nif(quoteInStorage && quoteInStorage.date === today) {\n    quote.innerHTML = quoteInStorage.quote;\n    author.innerHTML = quoteInStorage.author; \n} else {\n    yourEnergy.getQuote()\n        .then((response) => {\n            if(typeof response !== \"string\")  {\n                localStorage.setItem('quoteOfDay', JSON.stringify({\n                    quote: response.quote,\n                    author: response.author,\n                    date: today\n                }))\n                quote.innerHTML = response.quote;\n                author.innerHTML = response.author;\n            } else {\n                toastManager.error('Error', response);\n            }\n        })\n        .catch(() => {\n            quote.innerHTML = \"A lot of times I find that people who are blessed with the most talent don't ever develop that attitude, and the ones who aren't blessed in that way are the most competitive and have the biggest heart.\";\n            author.innerHTML = \"Tom Brady\";\n        })\n}\n","let currentFetchMethod = null;\n\nfunction resetCurrentPage() {\n    currentPageSearch = 1;\n    currentPageCategory = 1;\n    currentPageExercises = 1;\n}\nfunction resetCurrentPageFilter() {\n    currentPageCategory = 1;\n}\nfunction changeFetchMethod(newMethod) {\n    if (currentFetchMethod !== newMethod) {\n        resetCurrentPage();\n        currentFetchMethod = newMethod;\n    }\n}\nlet currentPageSearch = 1;\n\nfunction setCurrentPageSearch(page) {\n    currentPageSearch = page;\n}\n\nfunction getCurrentPageSearch() {\n    return currentPageSearch;\n}\n\nasync function renderPaginationButtonsSearch(\n    totalPages,\n    fetchDataFunction,\n    ...fetchDataParams\n) {\n    renderPagination(\n        totalPages,\n        fetchDataFunction,\n        setCurrentPageSearch,\n        getCurrentPageSearch,\n        ...fetchDataParams\n    );\n}\n\n// Пагінація для пошуку за категорією\nlet currentPageCategory = 1;\nfunction setCurrentPageCategory(page) {\n    currentPageCategory = page;\n}\n\nfunction getCurrentPageCategory() {\n    return currentPageCategory;\n}\n\nasync function renderPaginationButtonsCategory(\n    totalPages,\n    fetchDataFunction,\n    ...fetchDataParams\n) {\n    renderPagination(\n        totalPages,\n        fetchDataFunction,\n        setCurrentPageCategory,\n        getCurrentPageCategory,\n        ...fetchDataParams\n    );\n}\n\n// Пагінація для пошуку за іншим параметром (наприклад, за м'язами чи обладнанням)\nlet currentPageExercises = 1;\nfunction setCurrentPageExercises(page) {\n    currentPageExercises = page;\n}\n\nfunction getCurrentPageExercises() {\n    return currentPageExercises;\n}\n\nasync function renderPaginationButtonsExercises(\n    totalPages,\n    fetchDataFunction,\n    ...fetchDataParams\n) {\n    renderPagination(\n        totalPages,\n        fetchDataFunction,\n        setCurrentPageExercises,\n        getCurrentPageExercises,\n        ...fetchDataParams\n    );\n}\n\n// Загальна функція рендеру пагінації\nfunction renderPagination(\n    totalPages,\n    fetchDataFunction,\n    setCurrentPage,\n    getCurrentPage,\n    ...fetchDataParams\n) {\n    const pagination = document.querySelector('.pagination');\n    pagination.innerHTML = '';\n\n    const currentPage = getCurrentPage();\n\n    const prevButton = createPrevButton();\n    pagination.appendChild(prevButton);\n\n    const maxVisibleButtons = 5;\n    let startPage = Math.max(\n        1,\n        currentPage - Math.floor(maxVisibleButtons / 2)\n    );\n    let endPage = Math.min(totalPages, startPage + maxVisibleButtons - 1);\n    if (endPage - startPage + 1 < maxVisibleButtons) {\n        startPage = Math.max(1, endPage - maxVisibleButtons + 1);\n    }\n\n    if (startPage > 1) {\n        addPageButton(1);\n        if (startPage > 2) {\n            addEllipsis();\n        }\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n        addPageButton(i);\n    }\n\n    if (endPage < totalPages) {\n        if (endPage < totalPages - 1) {\n            addEllipsis();\n        }\n        addPageButton(totalPages);\n    }\n\n    const nextButton = createNextButton();\n    pagination.appendChild(nextButton);\n\n    function addPageButton(pageNumber) {\n        const button = document.createElement('button');\n        button.textContent = pageNumber;\n        button.classList.add('page-button');\n        if (pageNumber === currentPage) {\n            button.classList.add('active');\n        }\n        button.addEventListener('click', async () => {\n            setCurrentPage(pageNumber);\n            await fetchDataFunction(...fetchDataParams);\n            renderPagination(\n                totalPages,\n                fetchDataFunction,\n                setCurrentPage,\n                getCurrentPage,\n                ...fetchDataParams\n            );\n        });\n        pagination.appendChild(button);\n    }\n\n    function addEllipsis() {\n        const ellipsis = document.createElement('span');\n        ellipsis.textContent = '...';\n        ellipsis.classList.add('ellipsis');\n        pagination.appendChild(ellipsis);\n    }\n\n    function createPrevButton() {\n        const prevButton = document.createElement('button');\n        prevButton.innerHTML = '←';\n        prevButton.classList.add('page-button');\n        prevButton.disabled = currentPage === 1;\n        prevButton.addEventListener('click', async () => {\n            if (currentPage > 1) {\n                setCurrentPage(currentPage - 1);\n                await fetchDataFunction(...fetchDataParams);\n                renderPagination(\n                    totalPages,\n                    fetchDataFunction,\n                    setCurrentPage,\n                    getCurrentPage,\n                    ...fetchDataParams\n                );\n            }\n        });\n        return prevButton;\n    }\n\n    function createNextButton() {\n        const nextButton = document.createElement('button');\n        nextButton.innerHTML = '→';\n        nextButton.classList.add('page-button');\n        nextButton.disabled = currentPage === totalPages;\n        nextButton.addEventListener('click', async () => {\n            if (currentPage < totalPages) {\n                setCurrentPage(currentPage + 1);\n                await fetchDataFunction(...fetchDataParams);\n                renderPagination(\n                    totalPages,\n                    fetchDataFunction,\n                    setCurrentPage,\n                    getCurrentPage,\n                    ...fetchDataParams\n                );\n            }\n        });\n        return nextButton;\n    }\n}\n\nexport {\n    renderPaginationButtonsSearch,\n    renderPaginationButtonsCategory,\n    renderPaginationButtonsExercises,\n    getCurrentPageSearch,\n    getCurrentPageCategory,\n    getCurrentPageExercises,\n    changeFetchMethod,\n    resetCurrentPageFilter,\n};\n","export default \"__VITE_ASSET__CJ13cRep__\"","import iconsSVG from '../img/icons.svg';\n\nclass Modal {\n    constructor(content, parentModal = null) {\n        this.parentModal = parentModal;\n        this.backdrop = document.createElement('div');\n        this.backdrop.classList.add('backdrop');\n\n        this.modal = document.createElement('div');\n        this.modal.classList.add('modal');\n\n        this.content = document.createElement('div');\n        this.content.classList.add('modal-content');\n        this.content.innerHTML = content;\n\n        this.closeButton = document.createElement('button');\n        this.closeButton.innerHTML = ` \n        <svg width=\"12\" height=\"12\">\n            <use class=\"modal-close-icon\" href=\"${iconsSVG}#icon-close-modal\"></use>\n        </svg>\n    `;\n        this.closeButton.classList.add('close-modal-btn');\n\n        this.modal.appendChild(this.content);\n        this.modal.appendChild(this.closeButton);\n        this.backdrop.appendChild(this.modal);\n\n        this.handleClose = this.closeModal.bind(this);\n\n        // Add event listener to close modal when clicking on close button\n        this.closeButton.addEventListener('click', this.handleClose);\n\n        // Add event listener to close modal when clicking on backdrop\n        this.backdrop.addEventListener('click', this.handleClose);\n\n        // Add event listener to close modal when pressing the ESC key\n        document.addEventListener('keydown', this.handleClose);\n\n        document.body.appendChild(this.backdrop);\n    }\n\n    openModal() {\n\n        if (this.parentModal) {\n            this.parentModal.backdrop.classList.remove('is-open');\n        } else {\n            // Avoid scrollbar jumping  when modal is opened\n            const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n            document.body.style.paddingRight = `${scrollbarWidth}px`;\n        }\n        \n\n        document.body.classList.add('modal-no-scroll');\n        this.backdrop.classList.add('is-open');\n    }\n\n    toggleModalVisibility() {\n        this.backdrop.classList.toggle('is-open');\n    }\n\n    closeModal(event) {\n\n        if (\n            !event ||\n            (event.type === 'keydown' && event.key !== 'Escape') ||\n            !this.backdrop.classList.contains('is-open') ||\n            event.target.closest('.modal-content')\n        ) {\n            return;\n        }\n\n        // Remove event listeners\n        document.removeEventListener('keydown', this.handleClose);\n\n        // Remove modal from the DOM\n        this.backdrop.classList.remove('is-open');\n        \n        if (this.parentModal) {\n            this.parentModal.backdrop.classList.add('is-open');\n        } else {\n            document.body.classList.remove('modal-no-scroll');\n            document.body.style.paddingRight = '';\n        }\n        \n        const exerciseId = sessionStorage.getItem('favorites2del');\n        if (exerciseId) {\n            // Remove exercise from favorites list if it's open\n            const favoritesList = document.querySelector('.favorites');\n            if (favoritesList) {\n                const exerciseCard = favoritesList.querySelector(`.exercise-card[data-id=\"${exerciseId}\"]`);\n                if (exerciseCard) {\n                    exerciseCard.remove();\n                }\n            }\n            sessionStorage.removeItem('favorites2del');\n        }\n        \n        this.backdrop.remove();\n    }\n}\n\nexport default Modal;\n","import Modal from './modal';\nimport toastManager from './api/toast-manager.js';\nimport yourEnergy from './api/your-energy-api.js';\nimport { showExersiceInfoModal } from './exercise-info.js';\nimport iconsSVG from '../img/icons.svg';\n\nclass RatingForm {\n    constructor(exerciseId, parentModal = null) {\n        this.exerciseId = exerciseId;\n        this.parentModal = parentModal;\n        const modalContent = this.getFormHTML(exerciseId);\n        this.modal = new Modal(modalContent.outerHTML, parentModal);\n        this.modal.openModal();\n\n        // Add event listener to the form\n        const form = this.modal.modal.querySelector('.rating-form');\n        const rating = form.querySelector('.rating-form__rating');\n        form.addEventListener('submit', async (event) => this.handleSubmit(event));\n        rating.addEventListener('click', (event) => this.handleRatingClick(event));\n    }\n\n    getFormHTML(exerciseId) {\n        const formContainer = document.createElement('div');\n        formContainer.classList.add('rating-form__container');\n\n        const form = document.createElement('form');\n        form.classList.add('rating-form');\n\n        const formContent = `\n            <h2 class=\"rating-form__title\">Rating</h2>\n            <div class=\"rating-form__rating\">\n                <span class=\"rating-form__value\">0.0</span>\n                <input type=\"radio\" id=\"rating-1\" class=\"visually-hidden\" name=\"rating\" value=\"1\" required>\n                <label for=\"rating-1\">\n                    <svg width=\"24\" height=\"24\">\n                        <use class=\"rating-star__empty\" href=\"${iconsSVG}#icon-star-18\"></use>\n                    </svg>\n                </label>\n                <input type=\"radio\" id=\"rating-2\" class=\"visually-hidden\" name=\"rating\" value=\"2\" required>\n                <label for=\"rating-2\">\n                    <svg width=\"24\" height=\"24\">\n                        <use class=\"rating-star__empty\" href=\"${iconsSVG}#icon-star-18\"></use>\n                    </svg>\n                </label>\n                <input type=\"radio\" id=\"rating-3\" class=\"visually-hidden\" name=\"rating\" value=\"3\" required>\n                <label for=\"rating-3\">\n                    <svg width=\"24\" height=\"24\">\n                        <use class=\"rating-star__empty\" href=\"${iconsSVG}#icon-star-18\"></use>\n                    </svg>\n                </label>\n                <input type=\"radio\" id=\"rating-4\" class=\"visually-hidden\" name=\"rating\" value=\"4\" required>\n                <label for=\"rating-4\">\n                    <svg width=\"24\" height=\"24\">\n                        <use class=\"rating-star__empty\" href=\"${iconsSVG}#icon-star-18\"></use>\n                    </svg>\n                </label>\n                <input type=\"radio\" id=\"rating-5\" class=\"visually-hidden\" name=\"rating\" value=\"5\" required>\n                <label for=\"rating-5\">\n                    <svg width=\"24\" height=\"24\">\n                        <use class=\"rating-star__empty\" href=\"${iconsSVG}#icon-star-18\"></use>\n                    </svg>\n                </label>\n            </div>\n            <input type=\"email\" class=\"footer-input rating-form__email\" name=\"email\" placeholder=\"Email\" required>\n            <textarea class=\"footer-input rating-form__comment\" name=\"comment\" placeholder=\"Your comment\" required></textarea>\n            <input type=\"hidden\" value=\"${exerciseId}\" name=\"exerciseId\">\n            <button type=\"submit\" class=\"footer-button rating-form__send\">Send</button>\n            `;\n\n        form.innerHTML = formContent;\n        formContainer.appendChild(form);\n\n        return formContainer;\n    }\n    \n    handleRatingClick(event) {\n        event.stopPropagation();\n        const rating = event.target;\n        if (rating.tagName !== 'INPUT') {\n            return;\n        }\n\n        const ratingValue = rating.value;\n        \n        // Clear all active stars\n        const stars = event.currentTarget.querySelectorAll('label');\n        stars.forEach(star => {\n            star.classList.remove('active');\n        });\n    \n        // Add active class to the clicked star and all previous stars\n        for (let i = 0; i < ratingValue; i++) {\n            stars[i].classList.add('active');\n        }\n\n        // Update rating value\n        const ratingValueElement = event.currentTarget.querySelector('.rating-form__value');\n        ratingValueElement.textContent = ratingValue + '.0';\n    }\n\n    handleEscapeKey(event) {\n        if (event.key === 'Escape') {\n            this.modal.closeModal();\n            \n            // Check if there's a parent modal and toggle its visibility if so\n            if (this.parentModal) {\n                this.parentModal.toggleModalVisibility();\n            }\n    \n            // Remove the Escape key listener after closing the modal\n            document.removeEventListener('keydown', this.handleEsc);\n        }\n    }\n    \n    async handleSubmit(e) {\n        e.preventDefault();\n    \n        const form = e.target;\n        const id = form.elements.exerciseId.value;\n        const rating = parseInt(form.elements.rating.value);\n        const email = form.elements.email.value;\n        const comment = form.elements.comment.value;\n    \n        if (!rating || !email || !comment) {\n            toastManager.error('Error:', 'All fields are required');\n            return;\n        }\n    \n        if (!email.match(/^\\w+(\\.\\w+)?@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/)) {\n            toastManager.error('Error:', 'Invalid email');\n            return;\n        }\n    \n        try {\n            const response = await yourEnergy.addRating(id, rating, email, comment);\n    \n            if (response instanceof Object) {\n                toastManager.success('Success:', 'Rating added successfully');\n                this.modal.backdrop.classList.remove('is-open');\n                if (this.parentModal) {\n                    this.parentModal.closeModal();\n                    showExersiceInfoModal(id);\n                }\n                this.modal.closeModal();\n            } else {\n                toastManager.error('Error:', response);\n            }\n    \n        } catch (error) {\n            toastManager.error('Error:', error);\n        }\n    }\n}\n\nexport default RatingForm;\n","checkTimer();\n\nfunction setTime() {\n  const timeLine = document.querySelector('.all-time');\n  const calories = document.querySelector('.calories');\n\n  const time = Math.floor((localStorage.getItem('timer') || 0) / 60);\n  const burntCalories = localStorage.getItem('burntCalories') || 0;\n\n  timeLine.innerText = `${time || 0} min`;\n  calories.innerText = Math.floor(Number(burntCalories) / 1000 || 0).toString();\n\n  if (time > 110) timeLine.style.color = 'green';\n}\n\nsetTime();\n\nexport default setTime;\n\n\nfunction checkTimer() {\n  const lastUpdate = localStorage.getItem('lastUpdate');\n  const today = new Date().toDateString();\n  if (lastUpdate === today) return;\n\n  localStorage.setItem('lastUpdate', today);\n  localStorage.setItem('timer', 0);\n  localStorage.setItem('burntCalories', 0);\n}","import api from './api/your-energy-api';\nimport modal from './modal';\nimport RatingForm from './rating-form';\nimport iconsSVG from '../img/icons.svg';\nimport setTime from '../js/timer-info.js';\n\n\nfunction showExersiceInfoModal(exerciseId) {\n    fetchExerciseInfoById(exerciseId).then(exerciseInfo => {\n        const content = buildExerciseInfoHTML(exerciseInfo);\n        const exerciseModal = new modal(content);\n\n        const addToFavoriteBtn = exerciseModal.modal.querySelector('.add-to-favorite-btn');\n        const giveRatingBtn = exerciseModal.modal.querySelector('.give-rating-btn');\n        const startBtn = exerciseModal.modal.querySelector('.start-btn');\n        const timer = exerciseModal.modal.querySelector('.timer');\n\n\n        let startTime;\n        let stopTime;\n        let intervalId;\n\n        addToFavoriteBtn.addEventListener('click', (e) => {\n            e.stopPropagation();\n            if (isFavorite(exerciseId)) {\n                removeFromFavorites(exerciseId);\n            } else {\n                addToFavorites(exerciseId);\n            }\n            // Update the button text and icon\n            addToFavoriteBtn.innerHTML = getAddedToFavoritesBtnHTML(exerciseId);\n        });\n        giveRatingBtn.addEventListener('click', (e) => {\n            exerciseModal.toggleModalVisibility();\n            const ratingForm = new RatingForm(exerciseId, exerciseModal);\n        });\n\n        startBtn.addEventListener('click', (e) => {\n            if (startBtn.classList.contains('start-btn')) {\n                startBtn.classList.remove('start-btn');\n                startBtn.classList.add('stop-btn');\n                startBtn.textContent = 'STOP';\n                startTime = Date.now();\n                intervalId = setInterval(() => {\n                    const currentTime = Date.now();\n                    timer.textContent = formatTime(Math.floor((currentTime - startTime) / 1000));\n                }, 1000);\n            }\n            else {\n                startBtn.classList.remove('stop-btn');\n                startBtn.classList.add('start-btn');\n                startBtn.textContent = 'START';\n                stopTime = Date.now();\n\n                clearInterval(intervalId);\n                const timeDiff = stopTime - startTime;\n                const seconds = Math.floor(timeDiff / 1000);\n\n                const savedTimer = Number(localStorage.getItem('timer')) || 0;\n                localStorage.setItem('timer', savedTimer + seconds);\n                const savedCalories = Number(localStorage.getItem('burntCalories')) || 0;\n                localStorage.setItem('burntCalories', savedCalories + seconds * (exerciseInfo.burnedCalories || 0));\n                localStorage.setItem('lastUpdate', new Date().toDateString());\n                setTime()\n            }\n        });\n\n        exerciseModal.openModal();\n    });\n}\n\nfunction buildExerciseInfoHTML(exerciseInfo) {\n    return `\n        <div class=\"exercise-info__wrapper\">\n            <img class=\"exercise-info__img\" src=\"${exerciseInfo.gifUrl}\" alt=\"${exerciseInfo.name}\" width=\"270\" height=\"259\">\n            <div class=\"exercise-info__content\">\n                <h3 class=\"exercise-info__title\">${exerciseInfo.name}</h3>\n                <div class=\"exercise-info__rating\">\n                    ${getRatingStarsHTML(exerciseInfo.rating)}\n                </div>\n                <ul class=\"exercise-info__params\">\n                    ${buildExerciseInfoParamsHTML(exerciseInfo)}\n                </ul>\n               <p class=\"exercise-info__description\">${exerciseInfo.description}</p>\n            </div>\n\n            <div class=\"exercise-btn-block\">\n                <div class=\"timer-block\">\n                    <button class=\"exercise-info__button time-btn start-btn\">START</button>\n                    <p class=\"timer\"></p>\n                </div>\n\n                <div class=\"exercise-info__actions\">\n                    <button class=\"exercise-info__button add-to-favorite-btn\" data-id=\"${exerciseInfo._id}\">\n                        ${getAddedToFavoritesBtnHTML(exerciseInfo._id)}\n                    </button>\n                    <button class=\"exercise-info__button give-rating-btn\">Give a rating</button>\n                </div>\n            </div>\n        </div>\n    `;\n}\n\nfunction buildExerciseInfoParamsHTML(exerciseInfo) {\n    const params = [];\n\n    if (exerciseInfo.target) {\n        params.push(`<li><span>Target</span><span class=\"details-target\">${exerciseInfo.target}</span></li>`);\n    }\n\n    if (exerciseInfo.bodyPart) {\n        params.push(`<li><span>Body Part</span><span class=\"details-body-part\">${exerciseInfo.bodyPart}</span></li>`);\n    }\n\n    if (exerciseInfo.equipment) {\n        params.push(`<li><span>Equipment</span> ${exerciseInfo.equipment}</li>`);\n    }\n\n    if (exerciseInfo.popularity) {\n        params.push(`<li><span>Popular</span> ${exerciseInfo.popularity}</li>`);\n    }\n\n    if (exerciseInfo.burnedCalories) {\n        params.push(`<li><span>Burned Calories</span><span class=\"details-calories\">${exerciseInfo.burnedCalories}</span></li>`);\n    }\n\n    return params.join('');\n}\n\nfunction getRatingStarsHTML(rating) {\n    const stars = [];\n\n    // Format rating text to 1 decimal place\n    rating = rating.toFixed(1);\n\n    const ratingInt = Math.floor(rating);\n    const ratingDecimal = rating - ratingInt;\n\n    // Add rating text\n    const ratingText = `<span class=\"exercise-info__rating-text\">${rating}</span>`;\n\n    // Fill full stars\n    for (let i = 0; i < ratingInt; i++) {\n        stars.push(\n            `<svg width=\"18\" height=\"18\">\n                <use class=\"rating-star__full\" href=\"${iconsSVG}#icon-star-18\"></use>\n            </svg>`\n        );\n    }\n\n    // Add half star if rating has decimal part\n    if (ratingDecimal > 0) {\n        const percent = ratingDecimal * 100;\n        stars.push(\n            `<svg width=\"18\" height=\"18\">\n                <defs>\n                    <linearGradient id=\"myGradient\">\n                        <stop offset=\"${percent}%\" stop-color=\"var(--color-stars-full)\" />\n                        <stop offset=\"0%\" stop-color=\"var(--color-stars-empty)\" />\n                    </linearGradient>\n                </defs>\n                <use class=\"rating-star\" href=\"${iconsSVG}#icon-star-18\" fill=\"url('#myGradient')\"></use>\n            </svg>`\n        );\n    }\n\n    // Fill the rest of the stars with empty stars\n    while (stars.length < 5) {\n        stars.push(\n            `<svg width=\"18\" height=\"18\">\n                <use class=\"rating-star__empty\" href=\"${iconsSVG}#icon-star-18\"></use>\n            </svg>`\n        );\n    }\n\n    return `${ratingText}<div class=\"exercise-info__rating-stars\">${stars.join('')}</div>`;\n}\n\nfunction addToFavorites(exerciseId) {\n    // Get data from local storage\n    const favorites = localStorage.getItem('favorites');\n    if (!favorites) {\n        // Add exercise to favorites\n        localStorage.setItem('favorites', JSON.stringify([exerciseId]));\n    } else {\n        // Parse favorites\n        const favoritesArr = JSON.parse(favorites);\n\n        // Check if exercise is already in favorites\n        if (favoritesArr.includes(exerciseId)) {\n            return;\n        }\n\n        // Add exercise to favorites\n        favoritesArr.push(exerciseId);\n        localStorage.setItem('favorites', JSON.stringify(favoritesArr));\n    }\n    sessionStorage.removeItem('favorites2del');\n}\n\nfunction removeFromFavorites(exerciseId, force = false) {\n    // Get data from local storage\n    const favorites = localStorage.getItem('favorites');\n    if (!favorites) {\n        return;\n    }\n\n    // Parse favorites\n    const favoritesArr = JSON.parse(favorites);\n\n    // Remove exercise from favorites\n    const updatedFavorites = favoritesArr.filter(id => id !== exerciseId);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n\n    // Mark to Remove exercise from favorites list if it's open\n    const favoritesList = document.querySelector('.favorites');\n    if (favoritesList) {\n        if (force) {\n            const exerciseCard = favoritesList.querySelector(`.exercise-card[data-id=\"${exerciseId}\"]`);\n            if (exerciseCard) {\n                exerciseCard.remove();\n            }\n        } else\n            sessionStorage.setItem('favorites2del', exerciseId);\n    }\n}\n\nfunction isFavorite(exerciseId) {\n    // Get data from local storage\n    const favorites = localStorage.getItem('favorites');\n\n    if (!favorites) {\n        return false;\n    }\n\n    const favoritesArr = JSON.parse(favorites);\n\n    return favoritesArr.includes(exerciseId);\n}\n\nfunction getAddedToFavoritesBtnHTML(exerciseId) {\n    const isFav = isFavorite(exerciseId);\n\n    return `\n        ${isFav ? 'Remove from favorites' : 'Add to favorites'}\n        <svg width=\"20\" height=\"20\">\n            <use class=\"modal-close-icon\" href=\"${iconsSVG}#${isFav ? 'icon-trash' : 'icon-heart'}\"></use>\n        </svg>\n    `;\n}\n\nasync function fetchExerciseInfoById(id) {\n    return await api.getExerciseById(id);\n}\n\n\nfunction formatTime(totalSeconds) {\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    // padStart добавляет ведущий ноль если число меньше 10\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n}\n\nexport { showExersiceInfoModal, removeFromFavorites };","function replaceInnerHtmlWithLoader(element) {\n    element.innerHTML = `<div class=\"loader\"></div>`;\n}\n\nfunction appendLoaderToElement(element) {\n    element.insertAdjacentHTML('beforeend', '<div class=\"loader\"></div>');\n}\n\nfunction removeLoaderFromElement(element) {\n    const loader = element.querySelector('.loader');\n    if (loader) {\n        loader.remove();\n    }\n}\n\nexport {\n    replaceInnerHtmlWithLoader,\n    appendLoaderToElement,\n    removeLoaderFromElement,\n};\n","import {\n    renderPaginationButtonsSearch,\n    renderPaginationButtonsExercises,\n    getCurrentPageSearch,\n    getCurrentPageExercises,\n    changeFetchMethod,\n} from './pagination-exercises.js';\nimport yourEnergy from './api/your-energy-api.js';\nimport toastManager from './api/toast-manager.js';\nimport { showExersiceInfoModal } from './exercise-info.js';\nimport iconsSVG from '../img/icons.svg';\nimport { removeFromFavorites } from './exercise-info.js';\n\nimport {\n    replaceInnerHtmlWithLoader,\n    removeLoaderFromElement,\n} from './loader.js';\nconst exercisesForm = document.querySelector('.exercises-form');\n\n// const notFoundTextEl = document.querySelector('.not-found-text');\nconst exercises = document.querySelector('.group-list');\n\nlet categoryName = 'muscles';\nlet categoryValue = '';\nlet keyword = '';\n\nif (exercisesForm) {\n    exercisesForm.addEventListener('submit', handlerSearchFormSubmit);\n}\n\nfunction getLimit() {\n    return screen.width > 767 ? 10 : 8;\n}\n\nfunction handlerSearchFormSubmit(e) {\n    e.preventDefault();\n\n    keyword = e.target.elements.search.value.trim();\n    // console.log(keyword);\n    if (!keyword) {\n        alert('Please, enter a search words');\n        return;\n    }\n    searchListOfExercises();\n    e.target.elements.search.value = '';\n}\n\nasync function searchListOfExercises() {\n    const page = getCurrentPageSearch();\n    replaceInnerHtmlWithLoader(exercises);\n\n    const limit = getLimit();\n    const listOfExercises = await yourEnergy.getExercises({\n        page,\n        limit,\n        [categoryName]: categoryValue,\n        keyword,\n    });\n    /* console.group(\n        page,\n        'searchListOfExercises',\n        categoryName,\n        categoryValue,\n        keyword,\n        listOfExercises,\n        listOfExercises.totalPages\n    ); // */\n    renderUserListExercises(exercises, listOfExercises.results);\n    changeFetchMethod('search');\n    renderPaginationButtonsSearch(\n        listOfExercises.totalPages,\n        searchListOfExercises,\n        categoryName,\n        categoryValue,\n        keyword\n    );\n    removeLoaderFromElement(exercises);\n}\n\nasync function findListOfExercises(catName, catValue) {\n    const page = getCurrentPageExercises();\n    switch (catName) {\n        case 'muscles':\n            categoryName = 'muscles';\n            break;\n        case 'equipment':\n            categoryName = 'equipment';\n            break;\n        // case 'body parts':\n        case 'bodypart':\n            categoryName = 'bodypart';\n            break;\n    }\n    categoryValue = catValue;\n    replaceInnerHtmlWithLoader(exercises);\n    try {\n        const limit = getLimit();\n        const listOfExercises = await yourEnergy.getExercises({\n            page,\n            limit,\n            [categoryName]: categoryValue,\n        });\n\n        // if (listOfExercises.results.length === 0) {\n        //     clearMarkup();\n        //     // console.log(\"length\",listOfExercises.results.length);\n        //     return;\n        // }\n\n        exercisesForm.classList.remove('visually-hidden');\n        /* console.group(\n            page,\n            'findListOfExercises',\n            categoryName,\n            categoryValue,\n            listOfExercises,\n            listOfExercises.totalPages\n        ); // */\n        renderUserListExercises(exercises, listOfExercises.results);\n        changeFetchMethod('exercises');\n        renderPaginationButtonsExercises(\n            listOfExercises.totalPages,\n            findListOfExercises,\n            categoryName,\n            categoryValue\n        );\n    } catch (err) {\n        clearMarkup();\n        toastManager.error('Error', err);\n    } finally {\n        removeLoaderFromElement(exercises);\n        // console.log('Buy');\n        // form.reset();\n    }\n}\n\nfunction renderUserListExercises(element, listExercises) {\n    const isFavorites = element.classList.contains('favorites');\n\n    const markup = listExercises\n        .map(\n            exercise => `\n<li class=\"exercise-card\" data-id=${exercise._id}>\n  <div class=\"top-row\">\n  <div class=\"rating\">\n        <p class=\"badge\">WORKOUT</p>\n        ${\n            isFavorites\n                ? `\n            <button type=\"button\" class=\"remove-favorite\" data-id=${exercise._id}>\n                <svg width=\"16\" height=\"16\">\n                    <use class=\"remove-favorite__icon\" href=\"${iconsSVG}#icon-trash\"></use>\n                </svg>\n            </button>`\n                : `<div class=\"rating-star\">\n                <span class='text-star'>${exercise.rating}</span>\n                    <svg class=\"star-icon\" width=\"18\" height=\"18\">\n                        <use href=\"${iconsSVG}#icon-star-18\"></use>\n                    </svg>\n            </div>\n        `\n        }\n        </div>\n        <button class=\"start\">\n            Start\n            <svg class=\"icon-arrow-right\" width=\"13\" height=\"13\">\n                    <use href=\"${iconsSVG}#icon-arrow-right\"></use>\n                </svg>\n        </button>\n    </div>\n    <div class=\"exercise-info\">\n    <div class=\"icon-wrapper\">\n    <svg class=\"arrow-running-icon\" width=\"14\" height=\"16\">                     \n        <use href=\"${iconsSVG}#icon-running-stick-figure\"></use>\n    </svg>\n</div>\n        <p class=\"exercise-name\">${exercise.name}</p>\n    </div>\n    <div class=\"details\">\n        <p>Burned calories: <span class=\"details-calories\">${\n            exercise.burnedCalories\n        } / ${exercise.time} min</span></p>\n        <p>Body part: <span class=\"details-calories\">${\n            exercise.bodyPart\n        }</span></p>\n        <p>Target: <span class=\"details-target\">${exercise.target}</span></p>\n    </div>\n</li>`\n        )\n        .join('');\n\n    element.innerHTML = markup;\n\n    // Add event listeners to the exercise start button\n    const exerciseCards = document.querySelectorAll('.exercise-card .start');\n    exerciseCards.forEach(card => {\n        card.addEventListener('click', handleExerciseStart);\n    });\n\n    if (isFavorites) {\n        const removeFavoriteButtons =\n            document.querySelectorAll('.remove-favorite');\n        removeFavoriteButtons.forEach(button => {\n            button.addEventListener('click', handleRemoveFavorite);\n        });\n    }\n}\n\nfunction handleExerciseStart(e) {\n    const exerciseId = e.target.closest('.exercise-card').dataset.id;\n    showExersiceInfoModal(exerciseId);\n}\n\nfunction handleRemoveFavorite(e) {\n    const exerciseCard = e.target.closest('.exercise-card');\n    const exerciseId = exerciseCard.dataset.id;\n    removeFromFavorites(exerciseId, true);\n}\n\nfunction clearMarkup() {\n    exercises.innerHTML = '';\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const searchInput = document.querySelector('.exercises-input');\n    const clearButton = document.querySelector('.clear-button');\n\n    if (searchInput && clearButton) {\n        clearButton.style.display = 'none';\n\n        searchInput.addEventListener('input', () => {\n            if (searchInput.value.trim() !== '') {\n                clearButton.style.display = 'flex';\n            } else {\n                clearButton.style.display = 'none';\n            }\n        });\n\n        clearButton.addEventListener('click', () => {\n            searchInput.value = '';\n            findListOfExercises(categoryName, categoryValue);\n            clearButton.style.display = 'none';\n            searchInput.focus();\n        });\n    } /* else {\n        console.warn('.exercises-input not found');\n    } // */\n});\n\nexport { findListOfExercises, renderUserListExercises };\n","import api from './api/your-energy-api';\nimport { findListOfExercises } from './exercises.js';\nimport {\n    changeFetchMethod,\n    renderPaginationButtonsCategory,\n    getCurrentPageCategory,\n} from './pagination-exercises.js';\nimport {\n    replaceInnerHtmlWithLoader,\n    removeLoaderFromElement,\n} from './loader.js';\nlet activeButtonText = ''; // By Ruslan Isupov Add global variable\n\n// const container = document.querySelector('.group-list');\n// const sectionTitle = document.querySelector(\".section-title\");\n\n// container.addEventListener('click', (event) => {\n//   const element = event.target.closest('.group-list__item');\n//   if (element) {\n//     console.log(element.dataset.name)\n//     // TODO you can call to open all exercises here\n//     sectionTitle.innerHTML = `Exercises / <span class='exercises-category'>${element.dataset.name}</span>`\n//   }\n// });\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const container = document.querySelector('.group-list');\n    const sectionTitle = document.querySelector('.section-title');\n\n    if (container) {\n        container.addEventListener('click', event => {\n            const element = event.target.closest('.group-list__item');\n            if (element) {\n                // console.log('catValue', element.dataset.name);\n                findListOfExercises(activeButtonText, element.dataset.name); //Added by Ruslan Isupov click card and make a request from server;\n                sectionTitle.innerHTML = `Exercises / <span class='exercises-category' id='categoryValue'>${element.dataset.name}</span>`;\n            }\n        });\n\n        renderGroupListByFilter();\n    } /* else {\n        console.warn('Елемент .group-list не знайдено.');\n    } // */\n});\n\nconst getGroupItemHTMLString = ({ filter, name, imgURL }) =>\n    `\n    <li\n      class=\"group-list__item\"\n      data-name=\"${name}\"\n    >\n      <img\n        class=\"group-list__item-image\"\n        src=\"${imgURL}\"\n        alt=\"${name}\"\n        width=\"335\"\n        height=\"225\"\n        loading=\"lazy\"\n      >\n      <div class=\"group-list__item-image-filter\"></div>\n      <div class=\"group-list__item-title\">\n        ${name}\n      </div>\n      <div class=\"group-list__item-subtitle\">\n        ${filter}\n      </div>\n    </li>\n  `;\n\nconst getGroupListHTMLString = categoryList => {\n    return categoryList.map(getGroupItemHTMLString).join('');\n};\n\nconst renderGroupList = categoryList => {\n    const container = document.querySelector('.group-list'); // Added by Inna Boiko\n    if (!container) return; // if no container, do nothing\n    const categoryListHTMLString = getGroupListHTMLString(categoryList);\n    container.innerHTML = categoryListHTMLString;\n};\n\nconst fetchDataByFilter = async params => {\n    return await api.getExercisesByFilter(params);\n};\n\n\nexport const renderGroupListByFilter = async (\n    filter = 'Muscles',\n    page = 1,\n    limit = screen.width > 767? 12 : 9\n) => {\n    filter = filter.trim();\n    page = getCurrentPageCategory(); // Added  by Ruslan Isupov\n    activeButtonText = filter.toLowerCase(); // Take filter and save in global variable \"activeButtonText\"\n    // console.log('renderGroupListByFilter before', filter);\n    // console.log('renderGroupListByFilter before', activeButtonText);\n    // if (activeButtonText !== filter.toLowerCase()) {\n    //     console.log('renderGroupListByFilter not equel');\n    //     page = 1;\n    //     activeButtonText = filter.toLowerCase();\n    // }\n    // activeButtonText = filter.toLowerCase();\n    if (activeButtonText === 'body parts') {\n        activeButtonText = 'bodypart';\n    }\n    // console.log('renderGroupListByFilter before', filter);\n    // console.log('renderGroupListByFilter before', activeButtonText);\n    replaceInnerHtmlWithLoader(document.querySelector('.group-list'));\n    const data = await fetchDataByFilter({ filter, page, limit });\n\n    renderGroupList(data.results);\n    //  Pagination\n    changeFetchMethod('category');\n    /* console.group(\n        page,\n        'renderGroupListByFilter',\n        activeButtonText,\n        filter,\n        data.totalPages\n    ); // */\n    renderPaginationButtonsCategory(\n        data.totalPages,\n        renderGroupListByFilter,\n        filter\n    );\n};\n\n// if (container) renderGroupListByFilter();\n","import { renderGroupListByFilter } from './group-list';\nimport { resetCurrentPageFilter } from './pagination-exercises';\nconst buttons = Array.from(document.querySelectorAll('.exercises-menu-button'));\n\nconst execisesMenuButtonHandler = element => {\n    const sectionTitle = document.querySelector('.section-title');\n    const exercisesForm = document.querySelector('.exercises-form');\n\n    sectionTitle.innerHTML = 'Exercises';\n    buttons.forEach(el => {\n        el.classList.remove('active');\n    });\n    element.classList.add('active');\n    exercisesForm.classList.add('visually-hidden');\n    resetCurrentPageFilter(); //Added By Ruslan Isupov Скидання сторінки до 1 при натисканні на фільтр категорії ;\n    renderGroupListByFilter(element.textContent);\n};\n\nbuttons.forEach(el =>\n    el.addEventListener('click', () => execisesMenuButtonHandler(el))\n);\n","const scrollToTopButton = document.getElementById('scrollToTop');\n\nwindow.addEventListener('scroll', () => {\n    if (window.scrollY > 300) {\n        scrollToTopButton.style.display = 'flex';\n    } else {\n        scrollToTopButton.style.display = 'none';\n    }\n});\n\n// Обробник натискання на кнопку\nscrollToTopButton.addEventListener('click', () => {\n    window.scrollTo({\n        top: 0,\n        behavior: 'smooth' // Плавний скрол\n    });\n});"],"names":["mobileMenu","mobileMenuOpenButton","mobileMenuCloseButton","currentPath","link","API_CONFIG","FILTER_TYPES","YourEnergy","axios","response","error","data","params","id","rate","email","review","list","promises","result","yourEnergy","rootStyles","popupBgColor","popupTxtColor","popupMainColor","popupLineColor","ToastManager","iziToast","title","message","settings","toastManager","today","quote","author","quoteInStorage","currentFetchMethod","resetCurrentPage","currentPageSearch","currentPageCategory","currentPageExercises","resetCurrentPageFilter","changeFetchMethod","newMethod","setCurrentPageSearch","page","getCurrentPageSearch","renderPaginationButtonsSearch","totalPages","fetchDataFunction","fetchDataParams","renderPagination","setCurrentPageCategory","getCurrentPageCategory","renderPaginationButtonsCategory","setCurrentPageExercises","getCurrentPageExercises","renderPaginationButtonsExercises","setCurrentPage","getCurrentPage","pagination","currentPage","prevButton","createPrevButton","maxVisibleButtons","startPage","endPage","addPageButton","addEllipsis","i","nextButton","createNextButton","pageNumber","button","ellipsis","iconsSVG","Modal","content","parentModal","scrollbarWidth","event","exerciseId","favoritesList","exerciseCard","RatingForm","modalContent","form","rating","formContainer","formContent","ratingValue","stars","star","ratingValueElement","comment","showExersiceInfoModal","checkTimer","setTime","timeLine","calories","time","burntCalories","lastUpdate","fetchExerciseInfoById","exerciseInfo","buildExerciseInfoHTML","exerciseModal","modal","addToFavoriteBtn","giveRatingBtn","startBtn","timer","startTime","stopTime","intervalId","e","isFavorite","removeFromFavorites","addToFavorites","getAddedToFavoritesBtnHTML","currentTime","formatTime","timeDiff","seconds","savedTimer","savedCalories","getRatingStarsHTML","buildExerciseInfoParamsHTML","ratingInt","ratingDecimal","ratingText","percent","favorites","favoritesArr","force","updatedFavorites","isFav","api","totalSeconds","minutes","replaceInnerHtmlWithLoader","element","removeLoaderFromElement","loader","exercisesForm","exercises","categoryName","categoryValue","keyword","handlerSearchFormSubmit","getLimit","searchListOfExercises","limit","listOfExercises","renderUserListExercises","findListOfExercises","catName","catValue","err","clearMarkup","listExercises","isFavorites","markup","exercise","card","handleExerciseStart","handleRemoveFavorite","searchInput","clearButton","activeButtonText","container","sectionTitle","renderGroupListByFilter","getGroupItemHTMLString","filter","name","imgURL","getGroupListHTMLString","categoryList","renderGroupList","categoryListHTMLString","fetchDataByFilter","buttons","execisesMenuButtonHandler","el","scrollToTopButton"],"mappings":"uvBAAA,MAAMA,EAAa,SAAS,cAAc,cAAc,EAClDC,GAAuB,SAAS,cAAc,uBAAuB,EACrEC,GAAwB,SAAS,cAAc,wBAAwB,EAE7ED,GAAqB,iBAAiB,QAAS,IAAM,CACnDD,EAAW,UAAU,IAAI,SAAS,CACpC,CAAC,EAEDE,GAAsB,iBAAiB,QAAS,IAAM,CACpDF,EAAW,UAAU,OAAO,SAAS,CACvC,CAAC,ECVD,SAAS,iBAAiB,mBAAoB,IAAM,CAChD,MAAMG,EAAc,OAAO,SAAS,SACpC,SAAS,iBAAiB,qBAAqB,EAAE,QAAQC,GAAQ,CAChDA,EAAK,QAAQ,WAAW,EAChC,UAAU,OACX,SACAD,EAAY,SAASC,EAAK,aAAa,MAAM,EAAE,UAAU,CAAC,CAAC,CACvE,CACA,CAAK,CACL,CAAC,ECPD,MAAMC,GAAa,CACf,QAAS,uCACT,QAAS,IACT,QAAS,CACL,eAAgB,kBACnB,CACL,EAEMC,GAAe,CAAC,aAAc,UAAW,WAAW,EAG1D,MAAMC,EAAW,CACb,aAAc,CACV,KAAK,IAAMC,GAAM,OAAOH,EAAU,EAElC,KAAK,IAAI,aAAa,SAAS,IAC1BI,GAAaA,EAAS,KACtBC,GAAU,QAAQ,OAAOA,CAAK,CAC3C,CACK,CAGD,mBAAmBA,EAAO,CAGtB,OAFeA,EAAM,OAEP,CACV,IAAK,KACD,MAAO,yCACX,IAAK,KACD,MAAO,wDACX,IAAK,KACD,MAAO,+DACX,QACI,GAAIA,EAAM,SAAU,CAChB,KAAM,CAAE,KAAAC,CAAI,EAAKD,EAAM,SACvB,OAAQC,EAAK,SAAW,+BAC3B,KACI,QAAID,EAAM,QACHA,EAAM,QAAQ,WAGd,UAAUA,EAAM,OAAO,EAE1C,CACJ,CAGD,MAAM,aAAaE,EAAS,GAAI,CAC5B,GAAI,CAACA,EAAO,MAAQ,CAACA,EAAO,OAAS,OAAOA,EAAO,MAAS,UAAY,OAAOA,EAAO,OAAU,SAC5F,MAAO,yCAGX,GAAI,CACA,OAAO,MAAM,KAAK,IAAI,IAAI,aAAc,CAAE,OAAAA,CAAM,CAAE,CACrD,OAAQF,EAAO,CACZ,OAAQA,EAAM,OAAM,CAChB,IAAK,KACD,MAAO,kCACX,IAAK,KACD,MAAO,+DACX,QACI,OAAO,KAAK,mBAAmBA,CAAK,CAC3C,CACJ,CACJ,CAGD,MAAM,UAAUG,EAAIC,EAAMC,EAAOC,EAAQ,CACrC,MAAML,EAAO,CAAE,KAAAG,EAAM,MAAAC,EAAO,OAAAC,CAAM,EAElC,GAAI,CACA,OAAO,MAAM,KAAK,IAAI,MAAM,cAAcH,CAAE,UAAWF,CAAI,CAC9D,OAAQD,EAAO,CACZ,OAAQA,EAAM,OAAM,CAChB,IAAK,KACD,MAAO,kDACX,IAAK,KACD,MAAO,oEACX,QACI,OAAO,KAAK,mBAAmBA,CAAK,CAC3C,CACJ,CACJ,CAGD,MAAM,gBAAgBG,EAAI,CACtB,GAAI,CACA,OAAO,MAAM,KAAK,IAAI,IAAI,cAAcA,CAAE,EAAE,CAC/C,OAAQH,EAAO,CACZ,OAAQA,EAAM,OAAM,CAChB,IAAK,KACD,MAAO,kDACX,IAAK,KACD,MAAO,oEACX,QACI,OAAO,KAAK,mBAAmBA,CAAK,CAC3C,CACJ,CACJ,CAGD,MAAM,qBAAqBE,EAAS,GAAI,CACpC,GAAI,CAACA,EAAO,MAAQ,CAACA,EAAO,OAAS,OAAOA,EAAO,MAAS,UAAY,OAAOA,EAAO,OAAU,SAC5F,MAAO,yCAGX,GAAI,CAACN,GAAa,SAASM,EAAO,MAAM,EACpC,MAAO,uDAGX,GAAI,CACA,OAAO,MAAM,KAAK,IAAI,IAAI,WAAY,CAAE,OAAAA,CAAM,CAAE,CACnD,OAAQF,EAAO,CACZ,OAAQA,EAAM,OAAM,CAChB,IAAK,KACD,MAAO,8DACX,QACI,OAAO,KAAK,mBAAmBA,CAAK,CAC3C,CACJ,CACJ,CAGD,MAAM,kBAAkBK,EAAO,CAC3B,GAAI,CAACA,EAAO,MAAO,wBAEnB,GAAI,CACA,OAAO,MAAM,KAAK,IAAI,KAAK,gBAAiB,CAAE,MAAAA,CAAK,CAAE,CACxD,OAAQL,EAAO,CACZ,OAAQA,EAAM,OAAM,CAChB,IAAK,KACD,MAAO,iEACX,IAAK,KACD,MAAO,oEACX,QACI,OAAO,KAAK,mBAAmBA,CAAK,CAC3C,CACJ,CACJ,CAED,MAAM,qBAAqBO,EAAM,CAC7B,GAAI,CAACA,EAAK,OAAQ,MAAO,0CAEzB,MAAMC,EAAWD,EAAK,IAAI,MAAMJ,GAAM,MAAM,KAAK,gBAAgBA,CAAE,CAAC,EAGpE,OAFgB,MAAM,QAAQ,WAAWK,CAAQ,GAElC,OAAOC,GAAUA,EAAO,SAAW,WAAW,EACxD,IAAIA,GAAUA,EAAO,KAAK,CAClC,CAGD,MAAM,UAAW,CAEb,GAAI,CACA,OAAO,MAAM,KAAK,IAAI,IAAI,QAAQ,CACrC,OAAQT,EAAO,CACZ,OAAO,KAAK,mBAAmBA,CAAK,CACvC,CACJ,CACL,CAGK,MAACU,EAAa,IAAIb,GCjKjBc,EAAa,iBAAiB,SAAS,eAAe,EAEtDC,GAAeD,EAAW,iBAAiB,kBAAkB,EAAE,KAAI,EACnEE,GAAgBF,EAAW,iBAAiB,mBAAmB,EAAE,KAAI,EACrEG,GAAiBH,EAAW,iBAAiB,oBAAoB,EAAE,KAAI,EACvEI,GAAiBJ,EAAW,iBAAiB,oBAAoB,EAAE,KAAI,EAE7E,MAAMK,EAAa,CACf,aAAc,CACVC,EAAS,SAAS,CACd,QAAS,IACT,aAAc,GACd,SAAU,UACV,aAAc,aACd,cAAe,YACf,YAAa,GACb,iBAAkBF,GAClB,gBAAiBH,GACjB,WAAYE,GACZ,aAAcD,GACd,MAAO,MACnB,CAAS,CACJ,CAED,QAAQK,EAAOC,EAAS,CACpBF,EAAS,QAAQ,CACb,MAAOC,EACP,QAASC,CACrB,CAAS,CACJ,CAED,MAAMD,EAAOC,EAAS,CAClBF,EAAS,MAAM,CACX,MAAOC,EACP,QAASC,CACrB,CAAS,CACJ,CAED,QAAQD,EAAOC,EAAS,CACpBF,EAAS,QAAQ,CACb,MAAOC,EACP,QAASC,CACrB,CAAS,CACJ,CAED,SAASC,EAAU,CACfH,EAAS,SAASG,CAAQ,CAC7B,CACL,CAEK,MAACC,EAAe,IAAIL,GClDnBM,EAAQ,IAAI,OAAO,YAAa,EAAC,MAAM,EAAG,EAAE,EAC5CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,eAAe,EAE/CC,EAAiB,KAAK,MAAM,aAAa,QAAQ,YAAY,CAAC,EAEjEA,GAAkBA,EAAe,OAASH,GACzCC,EAAM,UAAYE,EAAe,MACjCD,EAAO,UAAYC,EAAe,QAElCf,EAAW,SAAU,EAChB,KAAMX,GAAa,CACb,OAAOA,GAAa,UACnB,aAAa,QAAQ,aAAc,KAAK,UAAU,CAC9C,MAAOA,EAAS,MAChB,OAAQA,EAAS,OACjB,KAAMuB,CAC1B,CAAiB,CAAC,EACFC,EAAM,UAAYxB,EAAS,MAC3ByB,EAAO,UAAYzB,EAAS,QAE5BsB,EAAa,MAAM,QAAStB,CAAQ,CAEpD,CAAS,EACA,MAAM,IAAM,CACTwB,EAAM,UAAY,4MAClBC,EAAO,UAAY,WAC/B,CAAS,EC9BT,IAAIE,EAAqB,KAEzB,SAASC,IAAmB,CACxBC,EAAoB,EACpBC,EAAsB,EACtBC,EAAuB,CAC3B,CACA,SAASC,IAAyB,CAC9BF,EAAsB,CAC1B,CACA,SAASG,EAAkBC,EAAW,CAC9BP,IAAuBO,IACvBN,KACAD,EAAqBO,EAE7B,CACA,IAAIL,EAAoB,EAExB,SAASM,GAAqBC,EAAM,CAChCP,EAAoBO,CACxB,CAEA,SAASC,GAAuB,CAC5B,OAAOR,CACX,CAEA,eAAeS,GACXC,EACAC,KACGC,EACL,CACEC,EACIH,EACAC,EACAL,GACAE,EACA,GAAGI,CACX,CACA,CAGA,IAAIX,EAAsB,EAC1B,SAASa,GAAuBP,EAAM,CAClCN,EAAsBM,CAC1B,CAEA,SAASQ,GAAyB,CAC9B,OAAOd,CACX,CAEA,eAAee,GACXN,EACAC,KACGC,EACL,CACEC,EACIH,EACAC,EACAG,GACAC,EACA,GAAGH,CACX,CACA,CAGA,IAAIV,EAAuB,EAC3B,SAASe,GAAwBV,EAAM,CACnCL,EAAuBK,CAC3B,CAEA,SAASW,GAA0B,CAC/B,OAAOhB,CACX,CAEA,eAAeiB,GACXT,EACAC,KACGC,EACL,CACEC,EACIH,EACAC,EACAM,GACAC,EACA,GAAGN,CACX,CACA,CAGA,SAASC,EACLH,EACAC,EACAS,EACAC,KACGT,EACL,CACE,MAAMU,EAAa,SAAS,cAAc,aAAa,EACvDA,EAAW,UAAY,GAEvB,MAAMC,EAAcF,IAEdG,EAAaC,IACnBH,EAAW,YAAYE,CAAU,EAEjC,MAAME,EAAoB,EAC1B,IAAIC,EAAY,KAAK,IACjB,EACAJ,EAAc,KAAK,MAAMG,EAAoB,CAAC,CACtD,EACQE,EAAU,KAAK,IAAIlB,EAAYiB,EAAYD,EAAoB,CAAC,EAChEE,EAAUD,EAAY,EAAID,IAC1BC,EAAY,KAAK,IAAI,EAAGC,EAAUF,EAAoB,CAAC,GAGvDC,EAAY,IACZE,EAAc,CAAC,EACXF,EAAY,GACZG,KAIR,QAASC,EAAIJ,EAAWI,GAAKH,EAASG,IAClCF,EAAcE,CAAC,EAGfH,EAAUlB,IACNkB,EAAUlB,EAAa,GACvBoB,IAEJD,EAAcnB,CAAU,GAG5B,MAAMsB,EAAaC,IACnBX,EAAW,YAAYU,CAAU,EAEjC,SAASH,EAAcK,EAAY,CAC/B,MAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,YAAcD,EACrBC,EAAO,UAAU,IAAI,aAAa,EAC9BD,IAAeX,GACfY,EAAO,UAAU,IAAI,QAAQ,EAEjCA,EAAO,iBAAiB,QAAS,SAAY,CACzCf,EAAec,CAAU,EACzB,MAAMvB,EAAkB,GAAGC,CAAe,EAC1CC,EACIH,EACAC,EACAS,EACAC,EACA,GAAGT,CACnB,CACA,CAAS,EACDU,EAAW,YAAYa,CAAM,CAChC,CAED,SAASL,GAAc,CACnB,MAAMM,EAAW,SAAS,cAAc,MAAM,EAC9CA,EAAS,YAAc,MACvBA,EAAS,UAAU,IAAI,UAAU,EACjCd,EAAW,YAAYc,CAAQ,CAClC,CAED,SAASX,GAAmB,CACxB,MAAMD,EAAa,SAAS,cAAc,QAAQ,EAClD,OAAAA,EAAW,UAAY,IACvBA,EAAW,UAAU,IAAI,aAAa,EACtCA,EAAW,SAAWD,IAAgB,EACtCC,EAAW,iBAAiB,QAAS,SAAY,CACzCD,EAAc,IACdH,EAAeG,EAAc,CAAC,EAC9B,MAAMZ,EAAkB,GAAGC,CAAe,EAC1CC,EACIH,EACAC,EACAS,EACAC,EACA,GAAGT,CACvB,EAEA,CAAS,EACMY,CACV,CAED,SAASS,GAAmB,CACxB,MAAMD,EAAa,SAAS,cAAc,QAAQ,EAClD,OAAAA,EAAW,UAAY,IACvBA,EAAW,UAAU,IAAI,aAAa,EACtCA,EAAW,SAAWT,IAAgBb,EACtCsB,EAAW,iBAAiB,QAAS,SAAY,CACzCT,EAAcb,IACdU,EAAeG,EAAc,CAAC,EAC9B,MAAMZ,EAAkB,GAAGC,CAAe,EAC1CC,EACIH,EACAC,EACAS,EACAC,EACA,GAAGT,CACvB,EAEA,CAAS,EACMoB,CACV,CACL,CC5MA,MAAeK,EAAA,uCCEf,MAAMC,CAAM,CACR,YAAYC,EAASC,EAAc,KAAM,CACrC,KAAK,YAAcA,EACnB,KAAK,SAAW,SAAS,cAAc,KAAK,EAC5C,KAAK,SAAS,UAAU,IAAI,UAAU,EAEtC,KAAK,MAAQ,SAAS,cAAc,KAAK,EACzC,KAAK,MAAM,UAAU,IAAI,OAAO,EAEhC,KAAK,QAAU,SAAS,cAAc,KAAK,EAC3C,KAAK,QAAQ,UAAU,IAAI,eAAe,EAC1C,KAAK,QAAQ,UAAYD,EAEzB,KAAK,YAAc,SAAS,cAAc,QAAQ,EAClD,KAAK,YAAY,UAAY;AAAA;AAAA,kDAEaF,CAAQ;AAAA;AAAA,MAGlD,KAAK,YAAY,UAAU,IAAI,iBAAiB,EAEhD,KAAK,MAAM,YAAY,KAAK,OAAO,EACnC,KAAK,MAAM,YAAY,KAAK,WAAW,EACvC,KAAK,SAAS,YAAY,KAAK,KAAK,EAEpC,KAAK,YAAc,KAAK,WAAW,KAAK,IAAI,EAG5C,KAAK,YAAY,iBAAiB,QAAS,KAAK,WAAW,EAG3D,KAAK,SAAS,iBAAiB,QAAS,KAAK,WAAW,EAGxD,SAAS,iBAAiB,UAAW,KAAK,WAAW,EAErD,SAAS,KAAK,YAAY,KAAK,QAAQ,CAC1C,CAED,WAAY,CAER,GAAI,KAAK,YACL,KAAK,YAAY,SAAS,UAAU,OAAO,SAAS,MACjD,CAEH,MAAMI,EAAiB,OAAO,WAAa,SAAS,gBAAgB,YACpE,SAAS,KAAK,MAAM,aAAe,GAAGA,CAAc,IACvD,CAGD,SAAS,KAAK,UAAU,IAAI,iBAAiB,EAC7C,KAAK,SAAS,UAAU,IAAI,SAAS,CACxC,CAED,uBAAwB,CACpB,KAAK,SAAS,UAAU,OAAO,SAAS,CAC3C,CAED,WAAWC,EAAO,CAEd,GACI,CAACA,GACAA,EAAM,OAAS,WAAaA,EAAM,MAAQ,UAC3C,CAAC,KAAK,SAAS,UAAU,SAAS,SAAS,GAC3CA,EAAM,OAAO,QAAQ,gBAAgB,EAErC,OAIJ,SAAS,oBAAoB,UAAW,KAAK,WAAW,EAGxD,KAAK,SAAS,UAAU,OAAO,SAAS,EAEpC,KAAK,YACL,KAAK,YAAY,SAAS,UAAU,IAAI,SAAS,GAEjD,SAAS,KAAK,UAAU,OAAO,iBAAiB,EAChD,SAAS,KAAK,MAAM,aAAe,IAGvC,MAAMC,EAAa,eAAe,QAAQ,eAAe,EACzD,GAAIA,EAAY,CAEZ,MAAMC,EAAgB,SAAS,cAAc,YAAY,EACzD,GAAIA,EAAe,CACf,MAAMC,EAAeD,EAAc,cAAc,2BAA2BD,CAAU,IAAI,EACtFE,GACAA,EAAa,OAAM,CAE1B,CACD,eAAe,WAAW,eAAe,CAC5C,CAED,KAAK,SAAS,QACjB,CACL,CC7FA,MAAMC,EAAW,CACb,YAAYH,EAAYH,EAAc,KAAM,CACxC,KAAK,WAAaG,EAClB,KAAK,YAAcH,EACnB,MAAMO,EAAe,KAAK,YAAYJ,CAAU,EAChD,KAAK,MAAQ,IAAIL,EAAMS,EAAa,UAAWP,CAAW,EAC1D,KAAK,MAAM,YAGX,MAAMQ,EAAO,KAAK,MAAM,MAAM,cAAc,cAAc,EACpDC,EAASD,EAAK,cAAc,sBAAsB,EACxDA,EAAK,iBAAiB,SAAU,MAAON,GAAU,KAAK,aAAaA,CAAK,CAAC,EACzEO,EAAO,iBAAiB,QAAUP,GAAU,KAAK,kBAAkBA,CAAK,CAAC,CAC5E,CAED,YAAYC,EAAY,CACpB,MAAMO,EAAgB,SAAS,cAAc,KAAK,EAClDA,EAAc,UAAU,IAAI,wBAAwB,EAEpD,MAAMF,EAAO,SAAS,cAAc,MAAM,EAC1CA,EAAK,UAAU,IAAI,aAAa,EAEhC,MAAMG,EAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAOoCd,CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAMRA,CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAMRA,CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAMRA,CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAMRA,CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAM9BM,CAAU;AAAA;AAAA,cAI5C,OAAAK,EAAK,UAAYG,EACjBD,EAAc,YAAYF,CAAI,EAEvBE,CACV,CAED,kBAAkBR,EAAO,CACrBA,EAAM,gBAAe,EACrB,MAAMO,EAASP,EAAM,OACrB,GAAIO,EAAO,UAAY,QACnB,OAGJ,MAAMG,EAAcH,EAAO,MAGrBI,EAAQX,EAAM,cAAc,iBAAiB,OAAO,EAC1DW,EAAM,QAAQC,GAAQ,CAClBA,EAAK,UAAU,OAAO,QAAQ,CAC1C,CAAS,EAGD,QAASvB,EAAI,EAAGA,EAAIqB,EAAarB,IAC7BsB,EAAMtB,CAAC,EAAE,UAAU,IAAI,QAAQ,EAInC,MAAMwB,EAAqBb,EAAM,cAAc,cAAc,qBAAqB,EAClFa,EAAmB,YAAcH,EAAc,IAClD,CAED,gBAAgBV,EAAO,CACfA,EAAM,MAAQ,WACd,KAAK,MAAM,aAGP,KAAK,aACL,KAAK,YAAY,wBAIrB,SAAS,oBAAoB,UAAW,KAAK,SAAS,EAE7D,CAED,MAAM,aAAa,EAAG,CAClB,EAAE,eAAc,EAEhB,MAAMM,EAAO,EAAE,OACTzE,EAAKyE,EAAK,SAAS,WAAW,MAC9BC,EAAS,SAASD,EAAK,SAAS,OAAO,KAAK,EAC5CvE,EAAQuE,EAAK,SAAS,MAAM,MAC5BQ,EAAUR,EAAK,SAAS,QAAQ,MAEtC,GAAI,CAACC,GAAU,CAACxE,GAAS,CAAC+E,EAAS,CAC/B/D,EAAa,MAAM,SAAU,yBAAyB,EACtD,MACH,CAED,GAAI,CAAChB,EAAM,MAAM,0CAA0C,EAAG,CAC1DgB,EAAa,MAAM,SAAU,eAAe,EAC5C,MACH,CAED,GAAI,CACA,MAAMtB,EAAW,MAAMW,EAAW,UAAUP,EAAI0E,EAAQxE,EAAO+E,CAAO,EAElErF,aAAoB,QACpBsB,EAAa,QAAQ,WAAY,2BAA2B,EAC5D,KAAK,MAAM,SAAS,UAAU,OAAO,SAAS,EAC1C,KAAK,cACL,KAAK,YAAY,aACjBgE,EAAsBlF,CAAE,GAE5B,KAAK,MAAM,cAEXkB,EAAa,MAAM,SAAUtB,CAAQ,CAG5C,OAAQC,EAAO,CACZqB,EAAa,MAAM,SAAUrB,CAAK,CACrC,CACJ,CACL,CCxJAsF,KAEA,SAASC,GAAU,CACjB,MAAMC,EAAW,SAAS,cAAc,WAAW,EAC7CC,EAAW,SAAS,cAAc,WAAW,EAE7CC,EAAO,KAAK,OAAO,aAAa,QAAQ,OAAO,GAAK,GAAK,EAAE,EAC3DC,EAAgB,aAAa,QAAQ,eAAe,GAAK,EAE/DH,EAAS,UAAY,GAAGE,GAAQ,CAAC,OACjCD,EAAS,UAAY,KAAK,MAAM,OAAOE,CAAa,EAAI,KAAQ,CAAC,EAAE,WAE/DD,EAAO,MAAKF,EAAS,MAAM,MAAQ,QACzC,CAEAD,IAKA,SAASD,IAAa,CACpB,MAAMM,EAAa,aAAa,QAAQ,YAAY,EAC9CtE,EAAQ,IAAI,KAAM,EAAC,aAAY,EACjCsE,IAAetE,IAEnB,aAAa,QAAQ,aAAcA,CAAK,EACxC,aAAa,QAAQ,QAAS,CAAC,EAC/B,aAAa,QAAQ,gBAAiB,CAAC,EACzC,CCrBA,SAAS+D,EAAsBd,EAAY,CACvCsB,GAAsBtB,CAAU,EAAE,KAAKuB,GAAgB,CACnD,MAAM3B,EAAU4B,GAAsBD,CAAY,EAC5CE,EAAgB,IAAIC,EAAM9B,CAAO,EAEjC+B,EAAmBF,EAAc,MAAM,cAAc,sBAAsB,EAC3EG,EAAgBH,EAAc,MAAM,cAAc,kBAAkB,EACpEI,EAAWJ,EAAc,MAAM,cAAc,YAAY,EACzDK,EAAQL,EAAc,MAAM,cAAc,QAAQ,EAGxD,IAAIM,EACAC,EACAC,EAEJN,EAAiB,iBAAiB,QAAUO,GAAM,CAC9CA,EAAE,gBAAe,EACbC,EAAWnC,CAAU,EACrBoC,EAAoBpC,CAAU,EAE9BqC,GAAerC,CAAU,EAG7B2B,EAAiB,UAAYW,EAA2BtC,CAAU,CAC9E,CAAS,EACD4B,EAAc,iBAAiB,QAAUM,GAAM,CAC3CT,EAAc,sBAAqB,EAChB,IAAItB,GAAWH,EAAYyB,CAAa,CACvE,CAAS,EAEDI,EAAS,iBAAiB,QAAUK,GAAM,CACtC,GAAIL,EAAS,UAAU,SAAS,WAAW,EACvCA,EAAS,UAAU,OAAO,WAAW,EACrCA,EAAS,UAAU,IAAI,UAAU,EACjCA,EAAS,YAAc,OACvBE,EAAY,KAAK,MACjBE,EAAa,YAAY,IAAM,CAC3B,MAAMM,EAAc,KAAK,MACzBT,EAAM,YAAcU,GAAW,KAAK,OAAOD,EAAcR,GAAa,GAAI,CAAC,CAC9E,EAAE,GAAI,MAEN,CACDF,EAAS,UAAU,OAAO,UAAU,EACpCA,EAAS,UAAU,IAAI,WAAW,EAClCA,EAAS,YAAc,QACvBG,EAAW,KAAK,MAEhB,cAAcC,CAAU,EACxB,MAAMQ,EAAWT,EAAWD,EACtBW,EAAU,KAAK,MAAMD,EAAW,GAAI,EAEpCE,EAAa,OAAO,aAAa,QAAQ,OAAO,CAAC,GAAK,EAC5D,aAAa,QAAQ,QAASA,EAAaD,CAAO,EAClD,MAAME,EAAgB,OAAO,aAAa,QAAQ,eAAe,CAAC,GAAK,EACvE,aAAa,QAAQ,gBAAiBA,EAAgBF,GAAWnB,EAAa,gBAAkB,EAAE,EAClG,aAAa,QAAQ,aAAc,IAAI,KAAM,EAAC,aAAY,CAAE,EAC5DP,EAAS,CACZ,CACb,CAAS,EAEDS,EAAc,UAAS,CAC/B,CAAK,CACL,CAEA,SAASD,GAAsBD,EAAc,CACzC,MAAO;AAAA;AAAA,mDAEwCA,EAAa,MAAM,UAAUA,EAAa,IAAI;AAAA;AAAA,mDAE9CA,EAAa,IAAI;AAAA;AAAA,sBAE9CsB,GAAmBtB,EAAa,MAAM,CAAC;AAAA;AAAA;AAAA,sBAGvCuB,GAA4BvB,CAAY,CAAC;AAAA;AAAA,uDAERA,EAAa,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAUUA,EAAa,GAAG;AAAA,0BAC/Ee,EAA2Bf,EAAa,GAAG,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOtE,CAEA,SAASuB,GAA4BvB,EAAc,CAC/C,MAAM5F,EAAS,CAAA,EAEf,OAAI4F,EAAa,QACb5F,EAAO,KAAK,uDAAuD4F,EAAa,MAAM,cAAc,EAGpGA,EAAa,UACb5F,EAAO,KAAK,6DAA6D4F,EAAa,QAAQ,cAAc,EAG5GA,EAAa,WACb5F,EAAO,KAAK,8BAA8B4F,EAAa,SAAS,OAAO,EAGvEA,EAAa,YACb5F,EAAO,KAAK,4BAA4B4F,EAAa,UAAU,OAAO,EAGtEA,EAAa,gBACb5F,EAAO,KAAK,kEAAkE4F,EAAa,cAAc,cAAc,EAGpH5F,EAAO,KAAK,EAAE,CACzB,CAEA,SAASkH,GAAmBvC,EAAQ,CAChC,MAAMI,EAAQ,CAAA,EAGdJ,EAASA,EAAO,QAAQ,CAAC,EAEzB,MAAMyC,EAAY,KAAK,MAAMzC,CAAM,EAC7B0C,EAAgB1C,EAASyC,EAGzBE,EAAa,4CAA4C3C,CAAM,UAGrE,QAASlB,EAAI,EAAGA,EAAI2D,EAAW3D,IAC3BsB,EAAM,KACF;AAAA,uDAC2ChB,CAAQ;AAAA,mBAE/D,EAII,GAAIsD,EAAgB,EAAG,CACnB,MAAME,EAAUF,EAAgB,IAChCtC,EAAM,KACF;AAAA;AAAA;AAAA,wCAG4BwC,CAAO;AAAA;AAAA;AAAA;AAAA,iDAIExD,CAAQ;AAAA,mBAEzD,CACK,CAGD,KAAOgB,EAAM,OAAS,GAClBA,EAAM,KACF;AAAA,wDAC4ChB,CAAQ;AAAA,mBAEhE,EAGI,MAAO,GAAGuD,CAAU,4CAA4CvC,EAAM,KAAK,EAAE,CAAC,QAClF,CAEA,SAAS2B,GAAerC,EAAY,CAEhC,MAAMmD,EAAY,aAAa,QAAQ,WAAW,EAClD,GAAI,CAACA,EAED,aAAa,QAAQ,YAAa,KAAK,UAAU,CAACnD,CAAU,CAAC,CAAC,MAC3D,CAEH,MAAMoD,EAAe,KAAK,MAAMD,CAAS,EAGzC,GAAIC,EAAa,SAASpD,CAAU,EAChC,OAIJoD,EAAa,KAAKpD,CAAU,EAC5B,aAAa,QAAQ,YAAa,KAAK,UAAUoD,CAAY,CAAC,CACjE,CACD,eAAe,WAAW,eAAe,CAC7C,CAEA,SAAShB,EAAoBpC,EAAYqD,EAAQ,GAAO,CAEpD,MAAMF,EAAY,aAAa,QAAQ,WAAW,EAClD,GAAI,CAACA,EACD,OAOJ,MAAMG,EAHe,KAAK,MAAMH,CAAS,EAGH,OAAOvH,GAAMA,IAAOoE,CAAU,EACpE,aAAa,QAAQ,YAAa,KAAK,UAAUsD,CAAgB,CAAC,EAGlE,MAAMrD,EAAgB,SAAS,cAAc,YAAY,EACzD,GAAIA,EACA,GAAIoD,EAAO,CACP,MAAMnD,EAAeD,EAAc,cAAc,2BAA2BD,CAAU,IAAI,EACtFE,GACAA,EAAa,OAAM,CAE1B,MACG,eAAe,QAAQ,gBAAiBF,CAAU,CAE9D,CAEA,SAASmC,EAAWnC,EAAY,CAE5B,MAAMmD,EAAY,aAAa,QAAQ,WAAW,EAElD,OAAKA,EAIgB,KAAK,MAAMA,CAAS,EAErB,SAASnD,CAAU,EAL5B,EAMf,CAEA,SAASsC,EAA2BtC,EAAY,CAC5C,MAAMuD,EAAQpB,EAAWnC,CAAU,EAEnC,MAAO;AAAA,UACDuD,EAAQ,wBAA0B,kBAAkB;AAAA;AAAA,kDAEZ7D,CAAQ,IAAI6D,EAAQ,aAAe,YAAY;AAAA;AAAA,KAGjG,CAEA,eAAejC,GAAsB1F,EAAI,CACrC,OAAO,MAAM4H,EAAI,gBAAgB5H,CAAE,CACvC,CAGA,SAAS4G,GAAWiB,EAAc,CAC9B,MAAMC,EAAU,KAAK,MAAMD,EAAe,EAAE,EACtCf,EAAUe,EAAe,GAE/B,MAAO,GAAGC,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,CAAC,IAAIhB,EAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CAAC,EACxF,CCrQA,SAASiB,EAA2BC,EAAS,CACzCA,EAAQ,UAAY,4BACxB,CAMA,SAASC,EAAwBD,EAAS,CACtC,MAAME,EAASF,EAAQ,cAAc,SAAS,EAC1CE,GACAA,EAAO,OAAM,CAErB,CCIA,MAAMC,EAAgB,SAAS,cAAc,iBAAiB,EAGxDC,EAAY,SAAS,cAAc,aAAa,EAEtD,IAAIC,EAAe,UACfC,EAAgB,GAChBC,EAAU,GAEVJ,GACAA,EAAc,iBAAiB,SAAUK,EAAuB,EAGpE,SAASC,IAAW,CAChB,OAAO,OAAO,MAAQ,IAAM,GAAK,CACrC,CAEA,SAASD,GAAwBlC,EAAG,CAKhC,GAJAA,EAAE,eAAc,EAEhBiC,EAAUjC,EAAE,OAAO,SAAS,OAAO,MAAM,OAErC,CAACiC,EAAS,CACV,MAAM,8BAA8B,EACpC,MACH,CACDG,KACApC,EAAE,OAAO,SAAS,OAAO,MAAQ,EACrC,CAEA,eAAeoC,IAAwB,CACnC,MAAM1G,EAAOC,IACb8F,EAA2BK,CAAS,EAEpC,MAAMO,EAAQF,KACRG,EAAkB,MAAMrI,EAAW,aAAa,CAClD,KAAAyB,EACA,MAAA2G,EACA,CAACN,CAAY,EAAGC,EAChB,QAAAC,CACR,CAAK,EAUDM,GAAwBT,EAAWQ,EAAgB,OAAO,EAC1D/G,EAAkB,QAAQ,EAC1BK,GACI0G,EAAgB,WAChBF,GACAL,EACAC,EACAC,CACR,EACIN,EAAwBG,CAAS,CACrC,CAEA,eAAeU,EAAoBC,EAASC,EAAU,CAClD,MAAMhH,EAAOW,IACb,OAAQoG,EAAO,CACX,IAAK,UACDV,EAAe,UACf,MACJ,IAAK,YACDA,EAAe,YACf,MAEJ,IAAK,WACDA,EAAe,WACf,KACP,CACDC,EAAgBU,EAChBjB,EAA2BK,CAAS,EACpC,GAAI,CACA,MAAMO,EAAQF,KACRG,EAAkB,MAAMrI,EAAW,aAAa,CAClD,KAAAyB,EACA,MAAA2G,EACA,CAACN,CAAY,EAAGC,CAC5B,CAAS,EAQDH,EAAc,UAAU,OAAO,iBAAiB,EAShDU,GAAwBT,EAAWQ,EAAgB,OAAO,EAC1D/G,EAAkB,WAAW,EAC7Be,GACIgG,EAAgB,WAChBE,EACAT,EACAC,CACZ,CACK,OAAQW,EAAK,CACVC,KACAhI,EAAa,MAAM,QAAS+H,CAAG,CACvC,QAAc,CACNhB,EAAwBG,CAAS,CAGpC,CACL,CAEA,SAASS,GAAwBb,EAASmB,EAAe,CACrD,MAAMC,EAAcpB,EAAQ,UAAU,SAAS,WAAW,EAEpDqB,EAASF,EACV,IACGG,GAAY;AAAA,oCACYA,EAAS,GAAG;AAAA;AAAA;AAAA;AAAA,UAKpCF,EACM;AAAA,oEACkDE,EAAS,GAAG;AAAA;AAAA,+DAEjBxF,CAAQ;AAAA;AAAA,uBAGrD;AAAA,0CACwBwF,EAAS,MAAM;AAAA;AAAA,qCAEpBxF,CAAQ;AAAA;AAAA;AAAA,SAIpC;AAAA;AAAA;AAAA;AAAA;AAAA,iCAKwBA,CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAOpBA,CAAQ;AAAA;AAAA;AAAA,mCAGMwF,EAAS,IAAI;AAAA;AAAA;AAAA,6DAIpCA,EAAS,cACrB,MAAcA,EAAS,IAAI;AAAA,uDAEfA,EAAS,QACZ;AAAA,kDACyCA,EAAS,MAAM;AAAA;AAAA,MAGxD,EACA,KAAK,EAAE,EAEZtB,EAAQ,UAAYqB,EAGE,SAAS,iBAAiB,uBAAuB,EACzD,QAAQE,GAAQ,CAC1BA,EAAK,iBAAiB,QAASC,EAAmB,CAC1D,CAAK,EAEGJ,GAEI,SAAS,iBAAiB,kBAAkB,EAC1B,QAAQxF,GAAU,CACpCA,EAAO,iBAAiB,QAAS6F,EAAoB,CACjE,CAAS,CAET,CAEA,SAASD,GAAoBlD,EAAG,CAC5B,MAAMlC,EAAakC,EAAE,OAAO,QAAQ,gBAAgB,EAAE,QAAQ,GAC9DpB,EAAsBd,CAAU,CACpC,CAEA,SAASqF,GAAqBnD,EAAG,CAE7B,MAAMlC,EADekC,EAAE,OAAO,QAAQ,gBAAgB,EACtB,QAAQ,GACxCE,EAAoBpC,EAAY,EAAI,CACxC,CAEA,SAAS8E,IAAc,CACnBd,EAAU,UAAY,EAC1B,CAEA,SAAS,iBAAiB,mBAAoB,IAAM,CAChD,MAAMsB,EAAc,SAAS,cAAc,kBAAkB,EACvDC,EAAc,SAAS,cAAc,eAAe,EAEtDD,GAAeC,IACfA,EAAY,MAAM,QAAU,OAE5BD,EAAY,iBAAiB,QAAS,IAAM,CACpCA,EAAY,MAAM,KAAI,IAAO,GAC7BC,EAAY,MAAM,QAAU,OAE5BA,EAAY,MAAM,QAAU,MAE5C,CAAS,EAEDA,EAAY,iBAAiB,QAAS,IAAM,CACxCD,EAAY,MAAQ,GACpBZ,EAAoBT,EAAcC,CAAa,EAC/CqB,EAAY,MAAM,QAAU,OAC5BD,EAAY,MAAK,CAC7B,CAAS,EAIT,CAAC,EC5OD,IAAIE,EAAmB,GAcvB,SAAS,iBAAiB,mBAAoB,IAAM,CAChD,MAAMC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAe,SAAS,cAAc,gBAAgB,EAExDD,IACAA,EAAU,iBAAiB,QAAS1F,GAAS,CACzC,MAAM6D,EAAU7D,EAAM,OAAO,QAAQ,mBAAmB,EACpD6D,IAEAc,EAAoBc,EAAkB5B,EAAQ,QAAQ,IAAI,EAC1D8B,EAAa,UAAY,mEAAmE9B,EAAQ,QAAQ,IAAI,UAEhI,CAAS,EAED+B,IAIR,CAAC,EAED,MAAMC,GAAyB,CAAC,CAAE,OAAAC,EAAQ,KAAAC,EAAM,OAAAC,CAAQ,IACpD;AAAA;AAAA;AAAA,mBAGeD,CAAI;AAAA;AAAA;AAAA;AAAA,eAIRC,CAAM;AAAA,eACND,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOTA,CAAI;AAAA;AAAA;AAAA,UAGJD,CAAM;AAAA;AAAA;AAAA,IAKVG,GAAyBC,GACpBA,EAAa,IAAIL,EAAsB,EAAE,KAAK,EAAE,EAGrDM,GAAkBD,GAAgB,CACpC,MAAMR,EAAY,SAAS,cAAc,aAAa,EACtD,GAAI,CAACA,EAAW,OAChB,MAAMU,EAAyBH,GAAuBC,CAAY,EAClER,EAAU,UAAYU,CAC1B,EAEMC,GAAoB,MAAMzK,GACrB,MAAM6H,EAAI,qBAAqB7H,CAAM,EAInCgK,EAA0B,MACnCE,EAAS,UACTjI,EAAO,EACP2G,EAAQ,OAAO,MAAQ,IAAK,GAAK,IAChC,CACDsB,EAASA,EAAO,OAChBjI,EAAOQ,EAAsB,EAC7BoH,EAAmBK,EAAO,cAStBL,IAAqB,eACrBA,EAAmB,YAIvB7B,EAA2B,SAAS,cAAc,aAAa,CAAC,EAChE,MAAMjI,EAAO,MAAM0K,GAAkB,CAAE,OAAAP,EAAQ,KAAAjI,EAAM,MAAA2G,CAAK,CAAE,EAE5D2B,GAAgBxK,EAAK,OAAO,EAE5B+B,EAAkB,UAAU,EAQ5BY,GACI3C,EAAK,WACLiK,EACAE,CACR,CACA,EC1HMQ,GAAU,MAAM,KAAK,SAAS,iBAAiB,wBAAwB,CAAC,EAExEC,GAA4B1C,GAAW,CACzC,MAAM8B,EAAe,SAAS,cAAc,gBAAgB,EACtD3B,EAAgB,SAAS,cAAc,iBAAiB,EAE9D2B,EAAa,UAAY,YACzBW,GAAQ,QAAQE,GAAM,CAClBA,EAAG,UAAU,OAAO,QAAQ,CACpC,CAAK,EACD3C,EAAQ,UAAU,IAAI,QAAQ,EAC9BG,EAAc,UAAU,IAAI,iBAAiB,EAC7CvG,KACAmI,EAAwB/B,EAAQ,WAAW,CAC/C,EAEAyC,GAAQ,QAAQE,GACZA,EAAG,iBAAiB,QAAS,IAAMD,GAA0BC,CAAE,CAAC,CACpE,ECpBA,MAAMC,EAAoB,SAAS,eAAe,aAAa,EAE/D,OAAO,iBAAiB,SAAU,IAAM,CAChC,OAAO,QAAU,IACjBA,EAAkB,MAAM,QAAU,OAElCA,EAAkB,MAAM,QAAU,MAE1C,CAAC,EAGDA,EAAkB,iBAAiB,QAAS,IAAM,CAC9C,OAAO,SAAS,CACZ,IAAK,EACL,SAAU,QAClB,CAAK,CACL,CAAC"}